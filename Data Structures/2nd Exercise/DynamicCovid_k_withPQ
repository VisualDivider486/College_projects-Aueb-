package domesergasias2.com;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;

public class DynamicCovid_k_withPQ {

	public static void main(String[] args) {
		/*System.out.println("Ylopoihsh me Priority Queue\n");
		Scanner scannerLine =new Scanner(System.in);//
	  	System.out.println("Give me the file name(including .txt) :");
		System.out.print(">>");
		String fileName=scannerLine.nextLine();
		*/
	 
	 	Scanner scannerInt =new Scanner(System.in);
		System.out.println("Give me k (k is the number of cities we want with the most cases per 50k people):");
		System.out.print(">>");
		Integer k=scannerInt.nextInt();
		scannerInt.close();
		int k_times=0;			  //when k==k_times we stop the iteration
		PQ pq =new PQ(10);         //create PriorityQueue to add items of the file
    try {
      File myObj = new File("kappa.txt");
      //scannerLine.close();				//BALE SE SCANNER ONOMA FILE
      Scanner myReader = new Scanner(myObj);
      int i=0;
      int ID=1;
      int population=1;
      int covidCases=0;
      City city1=new City();
      while (myReader.hasNextLine()) {
        String data = myReader.next();
        
        if(i==0) {//ID
        	if(ID>0 && ID<=999) {
        		ID=Integer.parseInt(data);
        		city1.setID(ID);
        	}else {
        		System.out.println("ID out of range [1,999]");
        	}
        	
        }else if(i==1) {//name
        	if(data.length()<50) {
        		city1.setName(data);
        	}
        	else {
        		System.out.println("Name is more than 50 characters long");
        	}

        }else if(i==2) {//population
        	if(population>0 && population<10_000_000) {
        		population=Integer.parseInt(data);
	        	city1.setPopulation(population);
        	}
        	else {
        		System.out.println("the population isn't in range (0,10.000.000)");
        	}
        
        }else if(i==3) {//covid cases
        	covidCases=Integer.parseInt(data);
        	if(population<covidCases) {
        		System.out.println("Covid cases are more than the population");
        		System.exit(0);
        	}
        	city1.setCovidCases(covidCases);
        }
        i++;
        if(i==4) {
        	pq.insert(city1);
        	i=0;		//starting again
        	City city2 =new City();
        	city1=city2;
        	k_times++;
        	if(k_times==k) {
        		break;				//when we reach k cities we stop the iteration 
        	}
        	
        }
        //System.out.println(data);
      }
      myReader.close();
    } catch (FileNotFoundException e) {
      System.out.println("An error occurred.");
      e.printStackTrace();
    }
    if(k>pq.size()) {
    	System.exit(0);
    }
    //int kappa=pq.size();
    for(int i=0;i<k;i++) {
    	System.out.println(pq.getmax().getName());
    }
}
}
